---
import { type CollectionEntry, getCollection } from "astro:content";
import type { GetStaticPaths, MarkdownHeading } from "astro";
import DocsLayout from "@/layouts/DocsLayout.astro";
import type { Heading, DocsEntry } from "@/lib/types";

export const getStaticPaths = (async () => {
  const docs: DocsEntry[] = await getCollection("docs", (data: { data: { draft: boolean } }) => !data.data.draft);
  const headings: MarkdownHeading[][] = await Promise.all(
    docs.map((entry) => entry.render().then(({ headings }: { headings: MarkdownHeading[] }) => headings))
  );

  return docs.map((entry, index) => ({
    params: { slug: entry.slug },
    props: { entry, headings: headings[index] },
  }));
}) satisfies GetStaticPaths;

const { entry, headings } = Astro.props as {
  entry: CollectionEntry<"docs">;
  headings: Heading[];
};

const { Content } = await entry.render();
const idAndData = { headings, ...entry.data };
export const prerender = true;
---

<DocsLayout {...idAndData}>
  <Content />
</DocsLayout>
